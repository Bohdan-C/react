{"version":3,"sources":["components/phonebook/contacts/Contact.js","components/phonebook/filter/Filter.js","components/phonebook/Phonebook.js","components/gallery/Searchbar/Searchbar.js","components/gallery/ImageGalleryItem/ImageGalleryItem.js","components/gallery/ImageGallery/ImageGallery.js","components/services/services.js","components/gallery/Button/Button.js","components/gallery/Modal/Modal.js","components/gallery/Gallary.js","App.js","serviceWorker.js","index.js"],"names":["Contact","handleDelete","name","number","id","shortid","onClick","type","Filter","handleFilter","filter","autoComplete","autoFocus","onChange","value","Phonebook","state","contacts","filteredArr","handleAdd","e","setState","target","handleAddNumber","filterArr","obj","console","log","item","includes","addContact","find","elem","alert","prevState","this","JSON","parse","localStorage","getItem","prevProps","length","setItem","stringify","placeholder","map","key","Component","Searchbar","onHandleGetValue","onHandleSubmit","className","onSubmit","ImageGalleryItem","data","showModal","largeImageURL","src","webformatURL","alt","ImageGallery","img","APIkey","axios","defaults","baseURL","search","page","get","Button","onHandleLoad","Modal","hideModal","show","url","nodeName","Gallary","event","info","preventDefault","services","then","hits","window","addEventListener","removeEventListener","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAoBeA,EAhBC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrC,OACE,wBAAIC,GAAIC,OACLH,EADH,KACWC,EACT,4BACEG,QAAS,WACPL,EAAaI,QAEfE,KAAK,UAJP,YCSSC,EAfA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAC9B,OACE,oCACE,qDACA,2BACEH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,SAAUJ,EACVK,MAAOJ,MCNMK,E,2MACnBC,MAAQ,CACNC,SAAU,GAMVf,KAAM,GACNQ,OAAQ,GACRP,OAAQ,GACRe,YAAa,I,EAsBfC,UAAY,SAAAC,GACV,EAAKC,SAAS,CAAEnB,KAAMkB,EAAEE,OAAOR,S,EAGjCS,gBAAkB,SAAAH,GAChB,EAAKC,SAAS,CAAElB,OAAQiB,EAAEE,OAAOR,S,EAGnCL,aAAe,SAAAW,GACb,EAAKC,SAAS,CAAEX,OAAQU,EAAEE,OAAOR,QACjC,EAAKU,a,EAGPvB,aAAe,SAAAG,GACb,IAAIa,EAAW,EAAKD,MAAMC,SAASP,QAAO,SAAAe,GACxC,OAAOA,EAAIrB,KAAOA,KAEpB,EAAKiB,SAAS,CACZJ,SAAUA,IAEZS,QAAQC,IAAIvB,I,EAGdoB,UAAY,WACV,IAAMC,EAAM,EAAKT,MAAMC,SAASP,QAAO,SAAAkB,GAAI,OACzCA,EAAK1B,KAAK2B,SAAS,EAAKb,MAAMN,WAEhC,EAAKW,SAAS,CAAEH,YAAaO,K,EAG/BK,WAAa,SAAAV,GACX,GAAI,EAAKJ,MAAMC,SAASc,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,OAAS,EAAKc,MAAMd,QAC5D+B,MAAM,+BACD,CAAC,IAAD,GACL,EAAAP,SAAQC,IAAR,oBAAe,EAAKX,MAAMC,WAC1BS,QAAQC,IAAI,EAAKX,OACjB,IAAMS,EAAM,CACVrB,GAAIC,MACJH,KAAM,EAAKc,MAAMd,KACjBC,OAAQ,EAAKa,MAAMb,QAErB,EAAKkB,UAAS,SAAAa,GAAS,MAAK,CAC1BjB,SAAS,GAAD,mBAAMiB,EAAUjB,UAAhB,CAA0BQ,IAClCvB,KAAM,GACNC,OAAQ,S,mFA7DZgC,KAAKd,UAAS,SAAAa,GACZ,MAAO,CACLjB,SAAS,GAAD,mBACHiB,EAAUjB,UADP,YAEHmB,KAAKC,MAAMC,aAAaC,QAAQ,qB,yCAMxBC,EAAWN,GACxBA,EAAUjB,SAASwB,SAAWN,KAAKnB,MAAMC,SAASwB,SACpDf,QAAQC,IAAIO,EAAUjB,SAASwB,OAAQN,KAAKnB,MAAMC,SAASwB,QAC3DH,aAAaI,QAAQ,WAAYN,KAAKO,UAAUR,KAAKnB,MAAMC,c,+BAqDrD,IAAD,OACHA,EAAW,GAKf,OAHKA,EADiB,KAAtBkB,KAAKnB,MAAMN,OACKyB,KAAKnB,MAAME,YACXiB,KAAKnB,MAAMC,SAGzB,6BACE,yCACA,oCACA,2BACEV,KAAK,OACLM,SAAUsB,KAAKhB,UACfL,MAAOqB,KAAKnB,MAAMd,KAClB0C,YAAY,SAEd,sCACA,2BACErC,KAAK,OACLM,SAAUsB,KAAKZ,gBACfT,MAAOqB,KAAKnB,MAAMb,OAClByC,YAAY,WAEd,4BAAQrC,KAAK,SAASD,QAAS6B,KAAKL,YAApC,eAGA,6BACE,wCACA,kBAAC,EAAD,CAAQrB,aAAc0B,KAAK1B,aAAcC,OAAQyB,KAAKnB,MAAMN,SAC5D,4BACGO,EAAS4B,KAAI,SAAAjB,GAAI,OAChB,kBAAC,EAAD,CACE3B,aAAc,EAAKA,aACnBC,KAAM0B,EAAK1B,KACXC,OAAQyB,EAAKzB,OACb2C,IAAKzC,kB,GArHkB0C,aCkBxBC,G,MArBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,eAArB,OAChB,6BACE,4BAAQC,UAAU,aAChB,0BAAMA,UAAU,aAAaC,SAAUF,GACrC,4BAAQ3C,KAAK,SAAS4C,UAAU,qBAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEtC,SAAUoC,EACVE,UAAU,mBACV5C,KAAK,OACLI,aAAa,MACbC,WAAS,EACTgC,YAAY,kCCHPS,EAXU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACvB,wBAAIJ,UAAU,oBACZ,yBACE7C,QAAS,kBAAMiD,EAAUD,EAAKE,gBAC9BC,IAAKH,EAAKI,aACVC,IAAI,GACJR,UAAU,6BCKDS,EAVM,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACnB,6BACE,wBAAIJ,UAAU,gBACXG,EAAKT,KAAI,SAAAgB,GAAG,OACX,kBAAC,EAAD,CAAkBN,UAAWA,EAAWD,KAAMO,EAAKf,IAAKe,EAAIzD,W,kCCL9D0D,EAAS,qCAEfC,IAAMC,SAASC,QAAU,2BAEV,gHACCC,EADD,+BACU,SAAUC,EADpB,+BAC2B,EAD3B,SAGHb,EAAOS,IAAMK,IAAN,aACLF,EADK,iBACUC,EADV,gBACsBL,EADtB,yDAHJ,kBAMFR,GANE,gCAQT5B,QAAQC,IAAR,MARS,yDCEA0C,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACb,4BAAQhE,QAASgE,EAAc/D,KAAK,SAAS4C,UAAU,UAAvD,cCiBaoB,EAlBD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC1BxE,EAAOuE,EAAO,UAAY,SAChC,OACE,yBACEtB,UAAWjD,EACXI,QAAS,SAAAc,GACmB,QAAtBA,EAAEE,OAAOqD,UACXH,MAIJ,yBAAKrB,UAAU,SACb,yBAAKM,IAAKiB,EAAKf,IAAI,WC2EZiB,E,2MAjFb5D,MAAQ,CACNsC,KAAM,GACNxC,MAAO,GACPoD,OAAQ,GACRC,KAAM,EACNM,MAAM,EACNC,IAAK,I,EA+BPJ,aAAe,WACb,EAAKjD,SAAS,CAAE8C,KAAM,EAAKnD,MAAMmD,KAAO,K,EAG1CZ,UAAY,SAAAmB,GACV,EAAKrD,SAAS,CAAEoD,MAAM,EAAMC,S,EAG9BF,UAAY,WACV,EAAKnD,SAAS,CAAEoD,MAAM,K,EAGxBxB,iBAAmB,SAAA4B,GACjB,IAAMC,EAAOD,EAAMvD,OAAOR,MAC1B,EAAKO,SAAS,CAAEP,MAAOgE,K,EAGzB5B,eAAiB,SAAA2B,GACfA,EAAME,iBACN,EAAK1D,SAAS,CAAE6C,OAAQ,EAAKlD,MAAMF,S,mFAhDhB,IAAD,OAClBkE,IAAmBC,MAAK,SAAA3B,GACtB,EAAKjC,SAAS,CACZiC,KAAMA,EAAKA,KAAK4B,UAGpBC,OAAOC,iBAAiB,QAASjD,KAAKqC,a,yCAErBhC,EAAWN,GAAY,IAAD,OACnCA,EAAUgC,SAAW/B,KAAKnB,MAAMkD,QAClCc,EAAiB7C,KAAKnB,MAAMkD,QAAQe,MAAK,SAAA3B,GACvC,EAAKjC,SAAS,CACZiC,KAAMA,EAAKA,KAAK4B,UAIlBhD,EAAUiC,OAAShC,KAAKnB,MAAMmD,MAChCa,EAAiB7C,KAAKnB,MAAMkD,OAAQ/B,KAAKnB,MAAMmD,MAAMc,MAAK,SAAA3B,GACxD,EAAKjC,SAAS,CACZiC,KAAK,GAAD,mBAAMpB,EAAUoB,MAAhB,YAAyBA,EAAKA,KAAK4B,c,6CAO7CC,OAAOE,oBAAoB,QAASlD,KAAKqC,a,+BAyBzC,OACE,6BACE,kBAAC,EAAD,CACEvB,iBAAkBd,KAAKc,iBACvBC,eAAgBf,KAAKe,iBAEvB,kBAAC,EAAD,CAAcK,UAAWpB,KAAKoB,UAAWD,KAAMnB,KAAKnB,MAAMsC,OAC9B,IAA3BnB,KAAKnB,MAAMsC,KAAKb,OACf,kBAAC,EAAD,CAAQ6B,aAAcnC,KAAKmC,eAE3B,GAEF,kBAAC,EAAD,CACEG,KAAMtC,KAAKnB,MAAMyD,KACjBD,UAAWrC,KAAKqC,UAChBE,IAAKvC,KAAKnB,MAAM0D,W,GA3EJ3B,aCOPuC,EAPH,kBACV,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEgBC,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,MAAK,SAAAiB,GACjCA,EAAaC,kB","file":"static/js/main.1516d2c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport shortid from 'shortid';\r\n\r\nconst Contact = ({ handleDelete, name, number }) => {\r\n  return (\r\n    <li id={shortid()}>\r\n      {name}: {number}\r\n      <button\r\n        onClick={() => {\r\n          handleDelete(shortid());\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ handleFilter, filter }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        onChange={handleFilter}\r\n        value={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Contact from './contacts/Contact';\r\nimport shortid from 'shortid';\r\nimport Filter from './filter/Filter';\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    name: '',\r\n    filter: '',\r\n    number: '',\r\n    filteredArr: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    // localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          ...JSON.parse(localStorage.getItem('contacts')),\r\n        ],\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts.length !== this.state.contacts.length) {\r\n      console.log(prevState.contacts.length, this.state.contacts.length);\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleAdd = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleAddNumber = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  handleFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n    this.filterArr();\r\n  };\r\n\r\n  handleDelete = id => {\r\n    let contacts = this.state.contacts.filter(obj => {\r\n      return obj.id !== id;\r\n    });\r\n    this.setState({\r\n      contacts: contacts,\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  filterArr = () => {\r\n    const obj = this.state.contacts.filter(item =>\r\n      item.name.includes(this.state.filter),\r\n    );\r\n    this.setState({ filteredArr: obj });\r\n  };\r\n\r\n  addContact = e => {\r\n    if (this.state.contacts.find(elem => elem.name === this.state.name)) {\r\n      alert('this name already exist');\r\n    } else {\r\n      console.log(...this.state.contacts);\r\n      console.log(this.state);\r\n      const obj = {\r\n        id: shortid(),\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n      };\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, obj],\r\n        name: '',\r\n        number: '',\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let contacts = [];\r\n    this.state.filter !== ''\r\n      ? (contacts = this.state.filteredArr)\r\n      : (contacts = this.state.contacts);\r\n    // console.log(\"contacts\", contacts);\r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <h3>Name</h3>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleAdd}\r\n          value={this.state.name}\r\n          placeholder=\"Name\"\r\n        />\r\n        <h3>Number</h3>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleAddNumber}\r\n          value={this.state.number}\r\n          placeholder=\"Number\"\r\n        />\r\n        <button type=\"button\" onClick={this.addContact}>\r\n          Add contact\r\n        </button>\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <Filter handleFilter={this.handleFilter} filter={this.state.filter} />\r\n          <ul>\r\n            {contacts.map(item => (\r\n              <Contact\r\n                handleDelete={this.handleDelete}\r\n                name={item.name}\r\n                number={item.number}\r\n                key={shortid()}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Searchbar = ({ onHandleGetValue, onHandleSubmit }) => (\r\n  <div>\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={onHandleGetValue}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  </div>\r\n);\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ data, showModal }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={() => showModal(data.largeImageURL)}\r\n      src={data.webformatURL}\r\n      alt=\"\"\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ data, showModal }) => (\r\n  <div>\r\n    <ul className=\"ImageGallery\">\r\n      {data.map(img => (\r\n        <ImageGalleryItem showModal={showModal} data={img} key={img.id} />\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\nconst APIkey = '14480530-c98fbdaaa9be573dc41a56407';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nexport default {\r\n  async getData(search = 'nature', page = 1) {\r\n    try {\r\n      const data = axios.get(\r\n        `?q=${search}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst Button = ({ onHandleLoad }) => (\r\n  <button onClick={onHandleLoad} type=\"button\" className=\"Button\">\r\n    Load More\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Modal = ({ hideModal, show, url }) => {\r\n  const name = show ? 'Overlay' : 'd-none';\r\n  return (\r\n    <div\r\n      className={name}\r\n      onClick={e => {\r\n        if (e.target.nodeName !== 'IMG') {\r\n          hideModal();\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"Modal\">\r\n        <img src={url} alt=\"img\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport Seachbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport services from '../services/services';\r\nimport Button from './Button/Button';\r\nimport Modal from './Modal/Modal';\r\n\r\nclass Gallary extends Component {\r\n  state = {\r\n    data: [],\r\n    value: '',\r\n    search: '',\r\n    page: 1,\r\n    show: false,\r\n    url: '',\r\n  };\r\n  componentDidMount() {\r\n    services.getData().then(data => {\r\n      this.setState({\r\n        data: data.data.hits,\r\n      });\r\n    });\r\n    window.addEventListener('keyup', this.hideModal);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.search !== this.state.search) {\r\n      services.getData(this.state.search).then(data => {\r\n        this.setState({\r\n          data: data.data.hits,\r\n        });\r\n      });\r\n    }\r\n    if (prevState.page !== this.state.page) {\r\n      services.getData(this.state.search, this.state.page).then(data => {\r\n        this.setState({\r\n          data: [...prevState.data, ...data.data.hits],\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keyup', this.hideModal);\r\n  }\r\n\r\n  onHandleLoad = () => {\r\n    this.setState({ page: this.state.page + 1 });\r\n  };\r\n\r\n  showModal = url => {\r\n    this.setState({ show: true, url });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  onHandleGetValue = event => {\r\n    const info = event.target.value;\r\n    this.setState({ value: info });\r\n  };\r\n\r\n  onHandleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({ search: this.state.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Seachbar\r\n          onHandleGetValue={this.onHandleGetValue}\r\n          onHandleSubmit={this.onHandleSubmit}\r\n        />\r\n        <ImageGallery showModal={this.showModal} data={this.state.data} />\r\n        {this.state.data.length !== 0 ? (\r\n          <Button onHandleLoad={this.onHandleLoad} />\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Modal\r\n          show={this.state.show}\r\n          hideModal={this.hideModal}\r\n          url={this.state.url}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gallary;\r\n","import React from 'react';\r\n// import Feedback from \"./components/feedback/Feedback\";\r\nimport Phonebook from './components/phonebook/Phonebook';\r\n\r\nimport './App.css';\r\nimport Gallary from './components/gallery/Gallary';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Gallary />\r\n    <Phonebook />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}